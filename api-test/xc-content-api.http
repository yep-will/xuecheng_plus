### 课程查询列表
POST {{content_host}}/content/course/list?pageNo=1&pageSize=2
Content-Type: application/json

{
  "auditStatus": "202004",
  "courseName": "",
  "publishStatus": ""
}


### 课程分类查询
GET {{content_host}}/content/course-category/tree-nodes

### 课程分类查询
GET {{gateway_host}}/content/course-category/tree-nodes


### 新增课程
POST {{content_host}}/content/course
Content-Type: application/json

{
  "mt": "1-1",
  "st": "1-1-21",
  "name": "29特色课程",
  "pic": "",
  "teachmode": "200002",
  "users": "",
  "tags": "标签",
  "grade": "204001",
  "description": "课程介绍",
  "charge": "201001",
  "price": 10,
  "originalPrice": 100,
  "qq": "43232",
  "wechat": "4324322",
  "phone": "432432",
  "validDays": 365666
}



### 根据课程id查询课程信息
GET {{gateway_host}}/content/course/117
Content-Type: application/json



### 修改课程
PUT {{content_host}}/content/course
Content-Type: application/json

{
  "id": 117,
  "companyId": 1232141425,
  "companyName": "阿里妈妈",
  "name": "Nacos微服务开发实战2929",
  "users": "中高级Java开发工程师",
  "tags": "2023-2-9课程标签测试",
  "mt": "1-14",
  "st": "1-14-10",
  "grade": "204003",
  "teachmode": "200002",
  "description": "Nacos 是阿里巴巴推出来的一个新开源项目，这是一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。\n\nNacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。\n\nNacos 帮助您更敏捷和容易地构建、交付和管理微服务平台。 Nacos 是构建以“服务”为中心的现代应用架构 (例如微服务范式、云原生范式) 的服务基础设施\n\nNacos 支持如下核心特性：\n\n1）服务发现： 支持 DNS 与 RPC 服务发现，也提供原生 SDK 、OpenAPI 等多种服务注册方式和 DNS、HTTP 与 API 等多种服务发现方式。\n2）服务健康监测： Nacos 提供对服务的实时的健康检查，阻止向不健康的主机或服务实例发送请求。\n3）动态配置服务： Nacos 提供配置统一管理功能，能够帮助我们将配置以中心化、外部化和动态化的方式管理所有环境的应用配置和服务配置。\n4）动态 DNS 服务： Nacos 支持动态 DNS 服务权重路由，能够让我们很容易地实现中间层负载均衡、更灵活的路由策略、流量控制以及数据中心内网的简单 DNS 解析服务。\n5）服务及其元数据管理： Nacos 支持从微服务平台建设的视角管理数据中心的所有服务及元数据，包括管理服务的描述、生命周期、服务的静态依赖分析、服务的健康状态、服务的流量管理、路由及安全策略、服务的 SLA 以及最首要的 metrics 统计数据。",
  "pic": "/mediafiles/2022/10/04/8026f17cf7b8697eccec2c8406d0c96c.png",
  "createDate": "2022-10-04 18:58:11",
  "changeDate": "2023-02-09 12:02:18",
  "createPeople": null,
  "changePeople": null,
  "auditStatus": "202004",
  "status": "203002",
  "charge": "201001",
  "price": 29.0,
  "originalPrice": 29.0,
  "qq": "29292929",
  "wechat": "29292929",
  "phone": "29292929",
  "validDays": 365,
  "mtName": "信息安全",
  "stName": "其它"
}



### 查询某个课程的课程计划
GET {{content_host}}/content/teachplan/117/tree-nodes
Content-Type: application/json



### 新增课程计划--章
POST {{content_host}}/content/teachplan
Content-Type: application/json

{
  "courseId": 74,
  "parentid": 0,
  "grade": 1,
  "pName": "新章名称 [点击修改]"
}



### 新增课程计划--节,从数据库找到第一级的课程计划id向其下边添加计划
POST {{content_host}}/content/teachplan
Content-Type: application/json

{
  "courseId": 74,
  "parentid": 247,
  "grade": 2,
  "pName": "小节名称 [点击修改]"
}



### 保存课程计划,需要从数据库找到修改的课程计划id
POST {{content_host}}/content/teachplan
Content-Type: application/json

{
  "changeDate": null,
  "courseId": 22,
  "coursePubId": null,
  "createDate": null,
  "ctlBarShow": false,
  "ctlEditTitle": true,
  "endTime": null,
  "grade": "2",
  "isPreview": "1",
  "mediaType": "",
  "orderby": 1,
  "parentId": 237,
  "pName": "第1节修改名称",
  "startTime": null,
  "status": null,
  "teachplanId": 240
}



### 删除课程计划(分情况测试, 有子课程计划和没有子课程计划)
DELETE {{content_host}}/content/teachplan/291



### 新增/修改课程教师
POST {{content_host}}/content/courseTeacher
Content-Type: application/json

{
  "id": 24,
  "courseId": 117,
  "teacherName": "测试老师211",
  "position": "教师职位",
  "introduction": "教师简介"
}


### 删除课程教师
DELETE  {{content_host}}/content/courseTeacher/course/24/118


### 根据课程id查询课程发布信息
GET {{content_host}}/content/r/coursepublish/123


### 通过网关访问课程查询
GET {{gateway_host}}/content/course/whole/126


### 直接访问课程查询
GET {{content_host}}/content/course/whole/126